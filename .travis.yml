# Copyright (c) 2019 Abhishek Thakur(@abhiTronix) <abhi.una12@gmail.com>

# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at

#    http://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

language: python

matrix:
    include:
        - os: osx
          python: "3.6"
          language: generic
          osx_image: xcode11
          env: PYTHON=36
        - os: osx
          python: "3.7"
          language: generic
          osx_image: xcode11
          env: PYTHON=37
        - os: osx
          python: "3.8"
          language: generic
          osx_image: xcode11
          env: PYTHON=38
        - os: linux
          dist: bionic
          python: "3.6"
          language: python
          cache: pip
        - os: linux
          dist: bionic
          python: "3.7"
          language: python
          cache: pip
        - os: linux
          dist: bionic
          python: "3.8"
          language: python
          cache: pip  



before_install:
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
    brew install swig;
    brew install ffmpeg;
    brew link ffmpeg;
    brew install youtube-dl;
    brew install unzip;
    curl -LO https://raw.githubusercontent.com/GiovanniBussi/macports-ci/master/macports-ci;
    source ./macports-ci install;
    yes | sudo port install python$PYTHON;
    yes | sudo port install py$PYTHON-pip;
    sudo port select --set python3 python$PYTHON;
    sudo port select --set pip pip$PYTHON;
    python3 --version;
    pip --version;
    curl -LO https://raw.githubusercontent.com/python/cpython/master/Mac/BuildScript/resources/install_certificates.command;
    chmod +x install_certificates.command;
    ./install_certificates.command;
    export PATH=$PATH:$(python3 -c "import site; print(site.USER_BASE)")/bin;
    chmod +x scripts/bash/prepare_dataset.sh;
    fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
    sudo apt-get update -q;
    sudo apt-get install unzip wget -y;
    sudo apt-get install dos2unix -y;
    dos2unix scripts/bash/prepare_dataset.sh;
    chmod +x scripts/bash/prepare_dataset.sh;
    dos2unix scripts/bash/install_opencv.sh;
    chmod +x scripts/bash/install_opencv.sh;
    fi

branches: 
  only: 
    - testing

install: 
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
    pip install --upgrade pip wheel;
    pip install --upgrade numpy;
    pip install .;
    pip uninstall opencv-python -y;
    pip install six;
    pip install codecov;
    pip install --upgrade flake8;
    pip install --upgrade pytest;
    pip install --upgrade pytest-cov;
    pip install --upgrade youtube-dl;
    fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
    pip install --upgrade --user pip wheel;
    pip install --upgrade --user numpy;
    pip install --upgrade --user .;
    pip install --user six;
    pip install --user codecov;
    pip install --upgrade --user pytest;
    pip install --upgrade --user pytest-cov;
    fi

before_script:
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
    bash scripts/bash/prepare_dataset.sh;
    fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
    bash scripts/bash/install_opencv.sh;
    bash scripts/bash/prepare_dataset.sh;
    fi

script:
  - function keep_alive() { while true; do echo -en "\a"; sleep 60; done }
  - keep_alive &
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
    pytest --verbose --capture=no --cov-report term-missing --cov=vidgear vidgear/tests/;
    fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
    python -m pytest --verbose --capture=no --cov-report term-missing --cov=vidgear vidgear/tests/;
    python -m flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics;
    fi

after_success:
  - codecov
